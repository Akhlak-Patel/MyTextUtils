{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForms.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","myStyle","color","mode","backgroundColor","id","Navbar","to","title1","about","onClick","toggleMode","htmlFor","TextForms","useState","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","defaultProps","App","setMode","setAlert","message","setTimeout","body","setInterval","title","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0c8ee23.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    // for capital word of  success\r\n\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","// import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.mode ==='dark'?'rgb(36 76 104)':'white',\r\n        // border:'2px solid'\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className=\"container\" style={{color: props.mode ==='dark'?'white':'#042743'}}>\r\n            <h2 >About us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle} >\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or many more\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item \" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                           <strong> Free to use </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            TextUtils is a free character counter tool that instatnt character count and word count statics for a given text.Textutls reports the number of world and character. Thus is is suitable for wrinting text with word / character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle} >\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                           <strong> Browser Compatible </strong>                       </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This world counter software works in any web browser such as a Chrome, Firebox, Interner Explorer, Safari, Opera. It suits to count character in facebook, blog, books,excel document,pdf document, essays, etc.</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"container\">\r\n                <button onClick={toggleStyle}  type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n            </div> */}\r\n        </div>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"#\">{props.title1}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n          \r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">{props.about}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2 \" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title1: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  title1: 'Set Title here',\r\n  about: \"About \"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForms(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase was clicked\" + text)\r\n    let newText = text.toUpperCase(); \r\n    setText(newText)\r\n    props.showAlert(\": Converted to uppercase\",\"success\")\r\n  }\r\n  const handleLcClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text)\r\n    let newText = text.toLowerCase(); \r\n    setText(newText)\r\n    props.showAlert(\": Converted to lowercase\",\"success\")\r\n  }\r\n  const handleClearClick = () => {\r\n    let newText = ''; \r\n    setText(newText)\r\n    props.showAlert(\": All cleared\",\"success\")\r\n  }\r\n  \r\n  const handleOnChange = (event) =>{\r\n    console.log(\"On Change\")\r\n    setText(event.target.value)\r\n  }\r\n  const handleCopyText = () => {\r\n    var text = document.getElementById('myBox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\": Copied All text to clipbord\",\"success\")\r\n  }\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\": All extra spaces removed\",\"success\")\r\n  }\r\n\r\n  const [text,setText] = useState(\"Enter your text  \")\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h2 className=\"mb-2\">{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#0a0743':'white',color:props.mode==='dark'?'white':'black'}} rows=\"10\"></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick} > convert to Uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLcClick} > convert to Lovercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick} > All clear</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopyText} > Copy Text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpace} > Remove Extra Space</button>\r\n    </div>\r\n    <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} Character</p>\r\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minute will take to read this</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Nothing to preview \"}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\n\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar'\nimport TextForms from './components/TextForms';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#010224';\n      showAlert(\": Dark mode has been enabled\", \"success\")\n      // document.title = 'TextUtils Dark Mode Enable'\n      setInterval(() => {\n        document.title = 'TextUtils is amazing'\n      }, 2000);\n      setInterval(() => {\n        document.title = 'Install TextUtils now'\n\n      }, 1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\": Light mode has been enabled\", \"success\")\n      // document.title = 'TextUtils Light Mode Enable'\n    }\n  }\n  return (\n    <>\n      <Router>\n        {/* <Navbar title1=\"TextUtil s\" about=\"About TextUtils\"/> */}\n        <Navbar title1=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/About\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForms showAlert={showAlert} heading=\" Try TextUtils - Word counter, Character counter, Remove extra spaces\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n    </>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}